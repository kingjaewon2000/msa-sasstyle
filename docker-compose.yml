version: '3'
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15671:15671"
      - "5671:5671"
      - "4369:4369"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - sasstyle-network

  database:
    image: mysql:latest
    container_name: database
    restart: always
    ports:
      - "3308:3306"
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sasstyle
    volumes:
      - ./mysql/data:/var/lib/mysql
    depends_on:
      - rabbitmq
    networks:
      - sasstyle-network

  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    container_name: config-service
    restart: always
    depends_on:
      - rabbitmq
      - database
    ports:
      - "8888:8888"
    networks:
      - sasstyle-network

  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
    ports:
      - "8761:8761"
    networks:
      - sasstyle-network

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    ports:
      - "8000:8000"
    networks:
      - sasstyle-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    networks:
      - sasstyle-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    networks:
      - sasstyle-network

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    networks:
      - sasstyle-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    networks:
      - sasstyle-network

  review-service:
    build:
      context: ./review-service
      dockerfile: Dockerfile
    container_name: review-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SRPING_RABBITMQ_HOST: "rabbitmq"
    networks:
      - sasstyle-network

  fitting-service:
    build:
      context: ./fitting-service
      dockerfile: Dockerfile
    container_name: fitting-service
    restart: always
    depends_on:
      - rabbitmq
      - database
      - config-service
      - discovery-service
      - gateway-service
    volumes:
      - ./fitting-service:/code
    ports:
      - "9002:9002"
    networks:
      sasstyle-network:
      
networks:
  sasstyle-network:
    external: true
